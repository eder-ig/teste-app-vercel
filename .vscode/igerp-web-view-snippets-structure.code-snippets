{
	// Place your igerp-web-view workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
  "created ()": {
    "prefix": "created ()",
    "body": [
      "async created () {",
      "  await this.auditoriaAcesso(this.\\$router.currentRoute.matched[1].path)",
      "",
      "  /**",
      "   * Se tiver query",
      "   * Se NÃO tiver uma query.aux",
      "   * Se dentro do obj query possuir valores",
      "   * percorre as chaves, obtem os valores e preenche o obj filtro",
      "   */",
      "  if (this.\\$route.query && !this.\\$route.query.aux && Object.keys(this.\\$route.query).length) {",
      "    this.filtro = {",
      "      periodo: {",
      "        dataInicio: this.\\$route.query.data || null,",
      "        dataFim: this.\\$route.query.data || null",
      "      },",
      "      statusId: this.\\$route.query.statusId ? String(this.\\$route.query.statusId).split(',').map(el => Number(el)) : [],",
      "    }",
      "",
      "    setTimeout(() => {",
      "      if (this.\\$route.query.id && this.\\$route.query.exibir) {",
      "        this.exibirRegistro(this.\\$route.query.id)",
      "      } else this.listarRegistros()",
      "    }, 1000)",
      "  } else {",
      "    if (this.\\$route.query && this.\\$route.query.aux) {",
      "      this.filtro = this.\\$queryDecode(this.\\$route.query.aux, this.filtro)",
      "    } else {",
      "      if (this.\\$obterFiltros('igerp-web:filtro-problemas-cartao')) this.filtro = this.\\$obterFiltros('igerp-web:filtro-problemas-cartao')",
      "    }",
      "  }",
      "},"
    ],
    "description": "Escopo padrã do created das paginas de listagem"
  },
  "Store.Commit": {
    "prefix": "$store.commit",
    "body": [
      "this.\\$store.commit('$1/registros', [])"
    ],
    "description": ""
  },
  "Componente Dropdown": {
    "prefix": "dropdown",
    "body": [
      "<adquirenteDropdown",
      "  v-model=\"formulario.adquirenteId\"",
      "  :disabled=\"controle.exibir\"",
      "  :error=\"errors\"",
      "  :hide-details=\"!errors.length\"",
      "  required",
      "/>"
    ],
    "description": "Componente Dropdown"
  },
  "": {
    "prefix": "date-picker",
    "body": [
      "<date-picker",
      "  v-model=\"formulario.data\"",
      "  hide-details",
      "  type=\"date\"",
      "  max=\"14/08/2021\"",
      "  min=\"09/08/2021\"",
      "  controlar-dia",
      "  dense",
      "  label=\"Data\"",
      "  outlined",
      "/>"
    ],
    "description": "date-picker"
  },
  "auditoria": {
    "prefix": "auditoria-pagina",
    "body": [
      "await this.auditoriaAcesso(this.\\$router.currentRoute.path)",
      "...mapActions('app', [",
      "  'auditoriaAcesso'",
      "]),"
    ],
    "description": "Auditoria para salvar acesso da pagina"
  },
  "salvarFiltros": {
    "prefix": "$salvarFiltros",
    "body": [
      "this.\\$salvarFiltros('igerp-web:${1}filtro-feriados', this.filtro)"
    ],
    "description": "Salvar filtros no localstorage"
  },
  "obterFiltros": {
    "prefix": "$obterFiltros",
    "body": [
      "if (this.\\$obterFiltros('igerp-web:${1}filtro-feriados')) this.filtro = this.\\$obterFiltros('igerp-web:filtro-feriados')"
    ],
    "description": "Obter filtros salvos no localstorage"
  },
  "queryDecode": {
    "prefix": "$queryDecode",
    "body": [
      "if (this.\\$route.query && this.\\$route.query.aux) {",
      "  this.filtro = this.\\$queryDecode(this.\\$route.query.aux, this.filtro)",
      "}"
    ],
    "description": "Obtem a query decodifica, preenche o objeto filtro e retorna para o mesmo com os valores preenchidos"
  },
  "queryParse": {
    "prefix": "$queryParse",
    "body": [
      "this.\\$queryParse(this.\\$router.currentRoute.name, this.filtro)"
    ],
    "description": "Codifica o objeto filtro e adiciona ele na query da rota atual"
  },
  "dataRange": {
    "prefix": "dataRange",
    "body": [
      "<dateRange",
      "  v-model=\"filtro.periodo\"",
      "  :error-messages=\"errors\"",
      "  required",
      "  @listar=\"filtro.periodo.dataInicio ? listarRegistros() : ''\"",
      "/>",
      "periodo: {",
      "  dataInicio: null,",
      "  dataFim: null",
      "}"
    ],
    "description": "dataRange"
  },
  "data-cy": {
    "prefix": "data-cy",
    "body": "data-cy=\"$1\"",
    "description": "Tag para nomeclatura de testes e2e com cypress"
  },
  "pagina-implementação": {
    "prefix": "pagina",
    "body": [
      "<template>",
      "  <pagina",
      "    :cols=\"\\$vuetify.breakpoint.width < 1500 ? 10 : 7\"",
      "    :formulario.sync=\"modal\"",
      "    :loading=\"loading\"",
      "    :editar=\"!!(controle.exibir && !controle.inserir)\"",
      "    :salvar=\"!!(!controle.exibir && (controle.inserir || controle.editar))\"",
      "    :mais-opcoes=\"!controle.inserir\"",
      "    subtitulo=\"Pagina de cadastro e manutenção de ...\"",
      "    titulo-toolbar=\"Cadastro\"",
      "    titulo=\"Cadastro\"",
      "    fechar",
      "    @cancelar=\"resetFormulario()\"",
      "    @editar=\"controle.exibir = false, controle.editar = true\"",
      "    @fechar=\"resetFormulario()\"",
      "    @salvar=\"salvarRegistro()\"",
      "  >",
      "    <aviso",
      "      v-model=\"aviso.modal\"",
      "      :options=\"aviso\"",
      "      @sim=\"aviso = {modal: false, key: null, text: ''}\"",
      "      @excluir=\"aviso = {modal: false, key: null, text: ''}, excluirRegistro()\"",
      "      @excluirRelacionamento=\"aviso = {modal: false, key: null, text: ''}, excluirRelacionamento()\"",
      "    />",
      "    <modal",
      "      v-model=\"modalRelacionamento\"",
      "      :options=\"optionsModal\"",
      "      @input=\"modalRelacionamento = false, resetRelacionamento()\"",
      "      @salvar=\"inserirRelacionamento()\"",
      "      @editar=\"controleModal.exibir = false, controleModal.editar = true\"",
      "    >",
      "      <template slot=\"maisOpcoes\">",
      "        <v-list",
      "          class=\"pa-0\"",
      "          dense",
      "        >",
      "          <v-list-item @click=\"aviso = {modal: true, key: 'excluirRelacionamento', text: 'Deseja realmente excluir esse registro?'}\">",
      "            <v-list-item-icon class=\"mr-3\">",
      "              <v-icon color=\"primary\">",
      "                mdi-delete",
      "              </v-icon>",
      "            </v-list-item-icon>",
      "            <v-list-item-content>",
      "              <v-list-item-title>",
      "                Excluir registro",
      "              </v-list-item-title>",
      "            </v-list-item-content>",
      "          </v-list-item>",
      "        </v-list>",
      "      </template>",
      "      <v-form @submit.prevent=\"''\">",
      "        <validation-observer",
      "          ref=\"observerRelacionamento\"",
      "        >",
      "          <v-container",
      "            fluid",
      "            grid-list-xs",
      "          >",
      "            <v-row dense>",
      "              <v-col",
      "                cols=\"12\"",
      "                xl=\"3\"",
      "                lg=\"3\"",
      "                md=\"6\"",
      "                xs=\"12\"",
      "              >",
      "                <validation-provider",
      "                  v-slot=\"{ errors }\"",
      "                  name=\"Campo\"",
      "                  rules=\"required\"",
      "                  vid=\"campo\"",
      "                >",
      "                  //",
      "                </validation-provider>",
      "              </v-col>",
      "            </v-row>",
      "          </v-container>",
      "        </validation-observer>",
      "      </v-form>",
      "    </modal>",
      "",
      "    <template slot=\"formulario\">",
      "      <v-form @submit.prevent=\"''\">",
      "        <validation-observer",
      "          ref=\"observer\"",
      "        >",
      "          <v-container",
      "            fluid",
      "            grid-list-xs",
      "          >",
      "            <v-row dense>",
      "              <v-col",
      "                cols=\"12\"",
      "                xl=\"2\"",
      "                lg=\"2\"",
      "                md=\"6\"",
      "                xs=\"12\"",
      "              >",
      "                <validation-provider",
      "                  v-slot=\"{ errors }\"",
      "                  name=\"Campo\"",
      "                  vid=\"id\"",
      "                >",
      "                  //",
      "                </validation-provider>",
      "              </v-col>",
      "            </v-row>",
      "          </v-container>",
      "        </validation-observer>",
      "      </v-form>",
      "    </template>",
      "",
      "    <template slot=\"maisOpcoes\">",
      "      <v-list",
      "        class=\"pa-0\"",
      "        dense",
      "      >",
      "        <v-list-item @click=\"aviso = {modal: true, key: 'excluir', text: 'Deseja realmente excluir esse registro?'}\">",
      "          <v-list-item-icon class=\"mr-3\">",
      "            <v-icon color=\"primary\">",
      "              mdi-delete",
      "            </v-icon>",
      "          </v-list-item-icon>",
      "          <v-list-item-content>",
      "            <v-list-item-title>",
      "              Excluir registro",
      "            </v-list-item-title>",
      "          </v-list-item-content>",
      "        </v-list-item>",
      "      </v-list>",
      "    </template>",
      "",
      "    <template",
      "      v-if=\"formulario.id\"",
      "      slot=\"relacionamento\"",
      "    >",
      "      <tabela",
      "        ref=\"paginacaoFake\"",
      "        :colunas=\"colunasRelacionamento\"",
      "        :registros=\"registrosRelacionamento\"",
      "        :paginacao=\"paginacaoFake\"",
      "        :registros-por-pagina=\"20\"",
      "        exibir",
      "        height-auto",
      "        toolbar-grid",
      "        titulo=\"Configuração do Layout\"",
      "        @paginacao=\"paginacaoFake = \\$event\"",
      "        @exibir=\"exibirRelacionamento(\\$event)\"",
      "        @dblclick=\"exibirRelacionamento(\\$event.id)\"",
      "      />",
      "    </template>",
      "",
      "    <template slot=\"listagem\">",
      "      <filtro",
      "        :options=\"optionsFilter\"",
      "        @adicionar=\"modal = true, controle.inserir = true\"",
      "        @clearFilters=\"limparFiltros(), listarRegistros()\"",
      "        @search=\"listarRegistros()\"",
      "      >",
      "        <template slot=\"filtros\">",
      "          <v-container",
      "            class=\"my-0 py-0\"",
      "            fluid",
      "          >",
      "            <v-row",
      "              class=\"pa-0\"",
      "              dense",
      "            >",
      "              <v-col",
      "                cols=\"12\"",
      "                xl=\"2\"",
      "                lg=\"2\"",
      "                md=\"6\"",
      "                xs=\"12\"",
      "              >",
      "                //",
      "              </v-col>",
      "            </v-row>",
      "          </v-container>",
      "        </template>",
      "      </filtro>",
      "",
      "      <tabela",
      "        ref=\"paginacaoFake\"",
      "        :colunas=\"colunas\"",
      "        :registros=\"registros\"",
      "        :paginacao=\"paginacaoFake\"",
      "        :registros-por-pagina=\"20\"",
      "        :selecionados.sync=\"registrosSelecionados\"",
      "        class=\"mt-2\"",
      "        selecionar",
      "        exibir",
      "        height-auto",
      "        toolbar-grid",
      "        titulo=\"Listagem layouts\"",
      "        @paginacao=\"paginacaoFake = \\$event\"",
      "        @exibir=\"exibirRegistro(\\$event)\"",
      "      />",
      "    </template>",
      "  </pagina>",
      "</template>",
      "",
      "<script>",
      "import { mapActions, mapState } from 'vuex'",
      "",
      "export default {",
      "  name: 'PaginaCadastroLayout',",
      "",
      "  data: () => ({",
      "    aviso: {",
      "      modal: false,",
      "      key: null,",
      "      text: ''",
      "    },",
      "    colunas: [",
      "      {",
      "        text: 'Ação',",
      "        align: 'center',",
      "        sortable: false,",
      "        value: 'acao',",
      "        width: 61",
      "      },",
      "      {",
      "        text: 'Descrição',",
      "        align: 'start',",
      "        sortable: true,",
      "        value: 'descricao',",
      "        width: 50",
      "      },",
      "      {}",
      "    ],",
      "    colunasRelacionamento: [",
      "      {",
      "        text: 'Ação',",
      "        align: 'center',",
      "        sortable: false,",
      "        value: 'acao',",
      "        width: 61",
      "      },",
      "      {",
      "        text: 'Descrição',",
      "        align: 'start',",
      "        sortable: true,",
      "        value: 'descricao',",
      "        width: 50",
      "      },",
      "      {}",
      "    ],",
      "    controle: {",
      "      inserir: false,",
      "      exibir: false,",
      "      editar: false",
      "    },",
      "    controleModal: {",
      "      inserir: false,",
      "      exibir: false,",
      "      editar: false",
      "    },",
      "    filtro: {",
      "      //",
      "    },",
      "    formulario: {",
      "      //",
      "    },",
      "    formularioRelacionamento: {",
      "      //",
      "    },",
      "    loading: false,",
      "    modal: false,",
      "    modalRelacionamento: false,",
      "    paginacaoFake: {",
      "      pagina: 1,",
      "      registros: 20,",
      "      totalRegistros: 0",
      "    }",
      "  }),",
      "",
      "  computed: {",
      "    ...mapState('paginaCadastroLayoutExtrato', [",
      "      'registros',",
      "      'registrosRelacionamento'",
      "    ]),",
      "    filtroValor () {",
      "      return !!(",
      "        this.filtro.id",
      "      )",
      "    },",
      "    optionsFilter () {",
      "      return {",
      "       adicionar: true,",
      "        values: this.filtroValor,",
      "        maisOpcoes: [",
      "          {",
      "            title: 'Processar',",
      "            icon: 'mdi-cogs',",
      "            color: this.\\$vuetify.theme.dark ? '' : 'primary',",
      "            emit: 'processar'",
      "          }",
      "        ]",
      "      }",
      "    },",
      "    optionsModal () {",
      "      return {",
      "        title: this.controleModal.inserir ? 'Adicionar Validação do Layout' : 'Informações de Validação do Layout',",
      "        width: 700,",
      "        maisOpcoes: this.controleModal.editar,",
      "        actions: [",
      "          {",
      "            title: this.controleModal.exibir && !this.controleModal.inserir ? 'Editar' : 'Salvar',",
      "            color: this.\\$vuetify.theme.dark ? 'accent' : 'primary',",
      "            icon: this.controleModal.exibir && !this.controleModal.inserir ? 'mdi-pencil' : 'mdi-content-save',",
      "            emit: this.controleModal.exibir && !this.controleModal.inserir ? 'editar' : 'salvar',",
      "            outlined: false",
      "          },",
      "          {",
      "            title: 'Cancelar',",
      "            color: 'error',",
      "            icon: 'mdi-cancel',",
      "            emit: 'input',",
      "            outlined: false",
      "          }",
      "        ]",
      "      }",
      "    }",
      "  },",
      "",
      "  async created () {",
      "    await this.auditoriaAcesso(this.\\$router.currentRoute.matched[1].path)",
      "",
      "    /**",
      "     * Se tiver query",
      "     * Se NÃO tiver uma query.aux",
      "     * Se dentro do obj query possuir valores",
      "     * percorre as chaves, obtem os valores e preenche o obj filtro",
      "     */",
      "    if (this.\\$route.query && !this.\\$route.query.aux && Object.keys(this.\\$route.query).length) {",
      "      this.filtro = {",
      "        periodo: {",
      "          dataInicio: this.\\$route.query.data || null,",
      "          dataFim: this.\\$route.query.data || null",
      "        },",
      "        statusId: this.\\$route.query.statusId ? String(this.\\$route.query.statusId).split(',').map(el => Number(el)) : [],",
      "      }",
      "",
      "      setTimeout(() => {",
      "        if (this.\\$route.query.id && this.\\$route.query.exibir) {",
      "          this.exibirRegistro(this.\\$route.query.id)",
      "        } else this.listarRegistros()",
      "      }, 1000)",
      "    } else {",
      "      if (this.\\$route.query && this.\\$route.query.aux) {",
      "        this.filtro = this.\\$queryDecode(this.\\$route.query.aux, this.filtro)",
      "      } else {",
      "        if (this.\\$obterFiltros('igerp-web:filtro-problemas-cartao')) this.filtro = this.\\$obterFiltros('igerp-web:filtro-problemas-cartao')",
      "      }",
      "    }",
      "  },",
      "",
      "  methods: {",
      "    ...mapActions('app', [",
      "      'auditoriaAcesso'",
      "    ]),",
      "    ...mapActions('paginaCadastroLayoutExtrato', [",
      "      'listar',",
      "      'exibir',",
      "      'editar',",
      "      'salvar',",
      "      'excluir'",
      "    ]),",
      "    async exibirRegistro (id) {",
      "      this.loading = true",
      "",
      "      const res = await this.exibir(id)",
      "      if (res && !res.erro) {",
      "        this.formulario = {",
      "          //",
      "        }",
      "",
      "        // this.listarRelacionamento()",
      "      }",
      "",
      "      this.modal = true",
      "      this.controle.exibir = true",
      "      this.loading = false",
      "    },",
      "    async excluirRegistro () {",
      "      this.loading = true",
      "",
      "      const res = await this.excluir(this.formulario.id)",
      "",
      "      if (res && !res.erro) this.resetFormulario()",
      "",
      "      this.loading = false",
      "    },",
      "    async listarRegistros () {",
      "      this.loading = true",
      "",
      "      await this.listar({",
      "        // id: this.filtro.id || undefined",
      "      })",
      "",
      "      this.loading = false",
      "    },",
      "    limparFiltros () {",
      "      this.filtro = {",
      "        //",
      "      }",
      "    },",
      "    resetFormulario () {",
      "      this.controle = {",
      "        inserir: false,",
      "        exibir: false,",
      "        editar: false",
      "      }",
      "      this.formulario = {",
      "        //",
      "      }",
      "      this.imagem = null",
      "      this.modal = false",
      "      this.listarRegistros()",
      "    },",
      "    async salvarRegistro () {",
      "      if (await this.\\$refs.observer.validate()) {",
      "        this.loading = true",
      "",
      "        const form = {",
      "          //",
      "        }",
      "        let res",
      "",
      "        if (form.id) res = await this.editar(form)",
      "        else if (!form.id) res = await this.salvar(form)",
      "",
      "        if (res) {",
      "          if (!res.erro) {",
      "            if (res.id) this.exibirRegistro(res.id)",
      "            else this.resetFormulario()",
      "          } else if (typeof res.erro === 'object') {",
      "            this.\\$refs.observer.setErrors(res.erro)",
      "            this.\\$setError({}, res.erro)",
      "          }",
      "        }",
      "",
      "        this.loading = false",
      "      }",
      "    },",
      "",
      "    // Relacionamaento",
      "    async inserirRelacionamento () {",
      "      //",
      "    },",
      "    async resetRelacionamento () {",
      "      //",
      "    },",
      "    async excluirRelacionamento () {",
      "      //",
      "    },",
      "    async listarRelacionamento () {",
      "      //",
      "    }",
      "  }",
      "}",
      "</script>",
      ""
    ],
    "description": "Implementação do componente página"
  },
  "tabela": {
    "prefix": "tabela",
    "body": [
      "      <tabela",
      "        ref=\"paginacaoFake\"",
      "        :colunas=\"colunas\"",
      "        :registros=\"registros\"",
      "        :paginacao=\"paginacaoFake\"",
      "        :registros-por-pagina=\"20\"",
      "        class=\"mt-2\"",
      "        exibir",
      "        height-auto",
      "        toolbar-grid",
      "        titulo=\"Listagem layouts\"",
      "        @paginacao=\"paginacaoFake = \\$event\"",
      "        @exibir=\"exibirRegistro(\\$event)\"",
      "      />",
      "    paginacaoFake: {",
      "      pagina: 1,",
      "      registros: 20,",
      "      totalRegistros: 0",
      "    }"
    ],
    "description": "Implementação do componente tabela"
  },
  "v-select-link": {
    "prefix": "v-select-link",
    "body": [
      "<select-link",
      "  v-model=\"formulario.autorizadorId\"",
      "  :items=\"dropdownAutorizador\"",
      "  :disabled=\"controle.exibir\"",
      "  :error-messages=\"errors\"",
      "  :hide-details=\"!errors.length\"",
      "  :rota=\"{ name: 'Cadastro de Autorizadores' }\"",
      "  dense",
      "  clearable",
      "  class=\"required\"",
      "  item-value=\"id\"",
      "  item-text=\"descricao\"",
      "  label=\"Descricao\"",
      "  outlined",
      "  @atualizar=\"loadDropdownAutorizador()\"",
      "/>"
    ],
    "description": "Select com link para a página de cadastro"
  },
  "v-select": {
    "prefix": "v-select",
    "body": [
      "<v-select",
      "  v-model=\"formulario.descricao\"",
      "  :items=\"[]\"",
      "  :disabled=\"controle.exibir\"",
      "  :error-messages=\"errors\"",
      "  :hide-details=\"!errors.length\"",
      "  dense",
      "  class=\"required\"",
      "  item-value=\"id\"",
      "  item-text=\"descricao\"",
      "  label=\"Descricao\"",
      "  outlined",
      "/>"
    ],
    "description": "v-select implementação"
  },
  "v-text-field": {
    "prefix": "v-text-field",
    "body": [
      "<v-text-field",
      "  v-model=\"formulario.descricao\"",
      "  v-mask=\"mascara('T', 250)\"",
      "  :disabled=\"controle.exibir\"",
      "  :error-messages=\"errors\"",
      "  :hide-details=\"!errors.length\"",
      "  class=\"required\"",
      "  dense",
      "  label=\"Descricao\"",
      "  outlined",
      "/>"
    ],
    "description": "v-text-field"
  },
  "v-select-all": {
    "prefix": "v-select-all",
    "body": [
      "<select-all",
      "  v-model=\"filtro.status\"",
      "  :items=\"[]\"",
      "  clearable",
      "  dense",
      "  hide-details",
      "  item-value=\"id\"",
      "  item-text=\"descricao\"",
      "  label=\"Status\"",
      "  outlined",
      "/>"
    ],
    "description": "v-select-all implementação"
  },
  "date": {
    "prefix": "date",
    "body": [
      "<date",
      "  v-model=\"filtro.dataInicio\"",
      "  :max=\"\\$day().format('YYYY-MM-DD')\"",
      "  dense",
      "  label=\"Data Inicial\"",
      "  hide-details",
      "  outlined",
      "/>"
    ],
    "description": "date implementação"
  },
  "formulario": {
    "prefix": "formulario",
    "body": [
      "<template slot=\"formulario\">",
      "  <v-form @submit.prevent=\"''\">",
      "    <validation-observer",
      "      ref=\"observer\"",
      "    >",
      "      <v-container",
      "        fluid",
      "        grid-list-xs",
      "      >",
      "        <v-row dense>",
      "          <v-col",
      "            cols=\"12\"",
      "            xl=\"2\"",
      "            lg=\"2\"",
      "            md=\"6\"",
      "            xs=\"12\"",
      "          >",
      "            <validation-provider",
      "              v-slot=\"{ errors }\"",
      "              name=\"Cartão\"",
      "              vid=\"id\"",
      "            >",
      "              //",
      "            </validation-provider>",
      "          </v-col>",
      "        </v-row>",
      "      </v-container>",
      "    </validation-observer>",
      "  </v-form>",
      "</template>"
    ],
    "description": "formulario implementação"
  },
  "modal": {
    "prefix": "modal",
    "body": [
      "<modal",
      "  v-model=\"modalRelacionamento\"",
      "  :options=\"optionsModal\"",
      "  @input=\"modalRelacionamento = false, resetRelacionamento()\"",
      "  @salvar=\"inserirRelacionamento()\"",
      "  @editar=\"controleModal.exibir = false, controleModal.editar = true\"",
      ">",
      "  <template slot=\"maisOpcoes\">",
      "    <v-list",
      "      class=\"pa-0\"",
      "      dense",
      "    >",
      "      <v-list-item @click=\"aviso = {modal: true, key: 'excluirRelacionamento', text: 'Deseja realmente excluir esse registro?'}\">",
      "        <v-list-item-icon class=\"mr-3\">",
      "          <v-icon color=\"primary\">",
      "            mdi-delete",
      "          </v-icon>",
      "        </v-list-item-icon>",
      "        <v-list-item-content>",
      "          <v-list-item-title>",
      "            Excluir registro",
      "          </v-list-item-title>",
      "        </v-list-item-content>",
      "      </v-list-item>",
      "    </v-list>",
      "  </template>",
      "  <v-form @submit.prevent=\"''\">",
      "    <validation-observer",
      "      ref=\"observerRelacionamento\"",
      "    >",
      "      <v-container",
      "        fluid",
      "        grid-list-xs",
      "      >",
      "        <v-row dense>",
      "          <v-col",
      "            cols=\"12\"",
      "            xl=\"3\"",
      "            lg=\"3\"",
      "            md=\"6\"",
      "            xs=\"12\"",
      "          >",
      "            <validation-provider",
      "              v-slot=\"{ errors }\"",
      "              name=\"Campo\"",
      "              rules=\"required\"",
      "              vid=\"campo\"",
      "            >",
      "            //",
      "            </validation-provider>",
      "          </v-col>",
      "        </v-row>",
      "      </v-container>",
      "    </validation-observer>",
      "  </v-form>",
      "</modal>",
      "// Computed",
      "optionsModal () {",
      "  return {",
      "    title: this.controleModal.inserir ? 'Adicionar Informação' : 'Informações',",
      "    width: 700,",
      "    maisOpcoes: this.controleModal.editar,",
      "    actions: [",
      "      {",
      "        title: this.controleModal.exibir && !this.controleModal.inserir ? 'Editar' : 'Salvar',",
      "        color: this.\\$vuetify.theme.dark ? 'accent' : 'primary',",
      "        icon: this.controleModal.exibir && !this.controleModal.inserir ? 'mdi-pencil' : 'mdi-content-save',",
      "        emit: this.controleModal.exibir && !this.controleModal.inserir ? 'editar' : 'salvar',",
      "        outlined: false",
      "      },",
      "      {",
      "        title: 'Cancelar',",
      "        color: 'error',",
      "        icon: 'mdi-cancel',",
      "        emit: 'input',",
      "        outlined: false",
      "      }",
      "    ]",
      "  }",
      "},",
      "// Data",
      "controleModal: {",
      "  inserir: false,",
      "  exibir: false,",
      "  editar: false",
      "},"
    ],
    "description": "modal implementação"
  },
  "filtro": {
    "prefix": "filtro",
    "body": [
      "<filtro",
      "  :options=\"optionsFilter\"",
      "  @adicionar=\"modal = true, controle.inserir = true\"",
      "  @clearFilters=\"limparFiltros(), listarRegistros()\"",
      "  @search=\"listarRegistros()\"",
      ">",
      "  <template slot=\"filtros\">",
      "    <v-container",
      "      class=\"my-0 py-0\"",
      "      fluid",
      "    >",
      "      <v-row",
      "        class=\"pa-0\"",
      "        dense",
      "      >",
      "        <v-col",
      "          cols=\"12\"",
      "          xl=\"2\"",
      "          lg=\"2\"",
      "          md=\"6\"",
      "          xs=\"12\"",
      "        >",
      "          //",
      "        </v-col>",
      "      </v-row>",
      "    </v-container>",
      "  </template>",
      "</filtro>",
      "optionsFilter () {",
      "  return {",
      "  adicionar: true,",
      "    values: this.filtroValor,",
      "    maisOpcoes: [",
      "      {",
      "        title: 'Processar',",
      "        icon: 'mdi-cogs',",
      "        color: this.\\$vuetify.theme.dark ? '' : 'primary',",
      "        emit: 'processar'",
      "      }",
      "    ]",
      "  }",
      "},"
    ],
    "description": "filtro implementação"
  },
  "aviso": {
    "prefix": "aviso",
    "body": [
      "    <aviso",
      "      v-model=\"aviso.modal\"",
      "      :options=\"aviso\"",
      "      @sim=\"aviso = {modal: false, key: null, text: ''}\"",
      "      @excluir=\"aviso = {modal: false, key: null, text: ''}, excluirRegistro()\"",
      "      @excluirRelacionamento=\"aviso = {modal: false, key: null, text: ''}, excluirRelacionamento()\"",
      "    />",
      "    aviso: {",
      "      modal: false,",
      "      key: null,",
      "      text: ''",
      "    },"
    ],
    "description": "aviso implementação"
  },
  "mais-opcoes": {
    "prefix": "mais-opcoes",
    "body": [
      "      <template slot=\"maisOpcoes\">",
      "        <v-list",
      "          class=\"pa-0\"",
      "          dense",
      "        >",
      "          <v-list-item @click=\"aviso = {modal: true, key: 'excluirRelacionamento', text: 'Deseja realmente excluir esse registro?'}\">",
      "            <v-list-item-icon class=\"mr-3\">",
      "              <v-icon color=\"primary\">",
      "                mdi-delete",
      "              </v-icon>",
      "            </v-list-item-icon>",
      "            <v-list-item-content>",
      "              <v-list-item-title>",
      "                Excluir registro",
      "              </v-list-item-title>",
      "            </v-list-item-content>",
      "          </v-list-item>",
      "        </v-list>",
      "      </template>"
    ],
    "description": "mais-opcoes implementação"
  },
  "v-col": {
    "prefix": "v-col",
    "body": [
      "<v-col",
      "  cols=\"12\"",
      "  xl=\"2\"",
      "  lg=\"2\"",
      "  md=\"6\"",
      "  xs=\"12\"",
      ">",
      "  $1",
      "</v-col>"
    ],
    "description": "v-col implementação"
  },
  "validation-observer": {
    "prefix": "validation-observer",
    "body": [
      "<validation-observer",
      "  ref=\"observerProblema\"",
      ">",
      "  $1",
      "</validation-observer>"
    ],
    "description": "validation-observer"
  },
  "validation-provider": {
    "prefix": "validation-provider",
    "body": [
      "<validation-provider",
      "  v-slot=\"{ errors }\"",
      "  name=\"Campo\"",
      "  rules=\"required\"",
      "  vid=\"campo\"",
      ">",
      "  $1",
      "</validation-provider>"
    ],
    "description": "validation-provider"
  },
  "v-container": {
    "prefix": "v-container",
    "body": [
      "<v-container",
      "  fluid",
      "  grid-list-xs",
      ">",
      "  $1",
      "</v-container>"
    ],
    "description": "v-container"
  },
  "v-row": {
    "prefix": "v-row",
    "body": [
      "<v-row dense>",
      "  $1",
      "</v-row>"
    ],
    "description": "v-row"
  },
  "setError": {
    "prefix": "setError",
    "body": [
      "this.$setError({}, res.erro)"
    ],
    "description": "Exibe o erro sem formulario na notificação do sistema"
  },
  "v-textarea": {
    "prefix": "v-textarea",
    "body": [
      "<v-textarea",
      "  v-model=\"formulario.observacao\"",
      "  v-uppercase",
      "  :disabled=\"controle.exibir\"",
      "  :error-messages=\"errors\"",
      "  :hide-details=\"!errors.length\"",
      "  dense",
      "  label=\"Observação\"",
      "  outlined",
      "  rows=\"3\"",
      "  spellcheck=\"false\"",
      "/>"
    ],
    "description": "v-textarea"
  },
  "totais": {
    "prefix": "totais",
    "body": [
      "<template",
      "  v-slot:append=\"{ headers }\"",
      ">",
      "  <totaisTable",
      "    :headers=\"headers\"",
      "    :totais=\"totais\"",
      "  />",
      "</template>"
    ],
    "description": "Novo modelo de totalizadores do componente tabela"
  },
  "index_store": {
    "prefix": "index_store",
    "body": [
      "import * as actions from './actions'",
      "import mutations from './mutations'",
      "import state from './state'",
      "",
      "export default {",
      "  namespaced: true,",
      "  actions,",
      "  mutations,",
      "  state",
      "}",
      ""
    ],
    "description": "index_store"
  },
  "state_store": {
    "prefix": "state_store",
    "body": [
      "export default {",
      "  registros: []",
      "}",
      ""
    ],
    "description": "state_store"
  },
  "mutations_store": {
    "prefix": "mutations_store",
    "body": [
      "export default {",
      "  registros (state, param) {",
      "    state.registros = param",
      "  },",
      "  reset: () => {}",
      "}",
      ""
    ],
    "description": "mutations_store"
  },
  "actions_store": {
    "prefix": "actions_store",
    "body": [
      "import axios from '@/plugins/axios_local'",
      "",
      "export const listar = async ({ commit }, filtros) => {",
      "  try {",
      "    const res = await axios.get('md066/cadastro/conciliacao', {",
      "      params: filtros",
      "    })",
      "",
      "    if (!res.data.erro) { commit('registros', res.data) }",
      "",
      "    return res.data",
      "  } catch (error) {",
      "    return null",
      "  }",
      "}"
    ],
    "description": "actions_store"
  },
  "autorizacao": {
    "prefix": "autorizacao",
    "body": [
      "<autorizacao",
      "  v-if=\"modalAltorizacao\"",
      "  :autorizacao.sync=\"modalAltorizacao\"",
      "  :autenticacao.sync=\"autenticacao\"",
      "  @autorizar=\"''\"",
      "/>",
      "modalAltorizacao: false,",
      "autenticacao: null,"
    ],
    "description": "Componente Autorização"
  },
  "element.status": {
    "prefix": "element.status",
    "body": [
      "element.status = { chip: true, color: opcao.statusCor(3, element.codigoStatus), text: element.status }"
    ],
    "description": "element.status"
  },
  "Opção Genérica": {
    "prefix": "$opcao66",
    "body": "\\$opcao66[2].Digitacao.value"
  }
}
